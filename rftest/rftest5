#!/bin/bash

if [ "$EUID" != "0" ]; then
  echo "You must be root to run this script."
  exit 1
fi

PROTOCOLS="OpenFlow10,OpenFlow12,OpenFlow13"
SCRIPT_NAME="rftest5"
LXCDIR=/var/lib/lxc
MONGODB_CONF=/etc/mongodb.conf
MONGODB_PORT=27017
MONGODB_ADDR="192.168.10.1"
CONTROLLER_PORT=6633
RF_HOME=..
export PATH=$PATH:/usr/local/bin:/usr/local/sbin
export PYTHONPATH=$PYTHONPATH:$RF_HOME

ACTION=""
case "$1" in
--help)
    echo "$0"
    echo "Options: "
    echo "    --pox: run using POX (default)"
    echo "    --ryu: run using NOX"
    echo "    --reset: stop running and clear data from previous executions"
    exit
    ;;
--reset)
    ACTION="RESET"
    ;;
--ryu)
    ACTION="RYU"
    ;;
*)
    ACTION="POX"
    ;;
esac

cd $RF_HOME

wait_port_listen() {
    port=$1
    while ! `nc -z localhost $port` ; do
        echo -n .
        sleep 1
    done
}

echo_bold() {
    echo -e "\033[1m${1}\033[0m"
}

kill_process_tree() {
    top=$1
    pid=$2

    children=`ps -o pid --no-headers --ppid ${pid}`

    for child in $children
    do
        kill_process_tree 0 $child
    done

    if [ $top -eq 0 ]; then
        kill -9 $pid &> /dev/null
    fi
}

reset() {
    init=$1;
    if [ $init -eq 1 ]; then
        echo_bold "-> Starting $SCRIPT_NAME";
    else
        echo_bold "-> Stopping child processes...";
        kill_process_tree 1 $$
    fi

    sudo ovs-vsctl del-br dp0 &> /dev/null;
    sudo ovs-vsctl del-br switch1 &> /dev/null;
    sudo ovs-vsctl emer-reset &> /dev/null;

    echo_bold "-> Stopping and resetting LXC VMs...";
    for vm in rfvmZ; do
        lxc-shutdown -n "$vm"
        if [ $? -ne 0 ]; then
            lxc-stop -n $vm
        fi
        rm -rf $LXCDIR/$vm/rootfs/var/run/network/ifstate;
    done

    echo_bold "-> Shutting down MongoDB instance 1..."
    mongod -f /home/routeflow/RouteFlow/rftest/mongo/conf/master.conf --replSet rs0 --shutdown

    echo_bold "-> Shutting down MongoDB instance 2..."
    mongod -f /home/routeflow/RouteFlow/rftest/mongo/conf/slave1.conf --replSet rs0 --shutdown

    echo_bold "-> Shutting down MongoDB instance 3..."
    mongod -f /home/routeflow/RouteFlow/rftest/mongo/conf/slave2.conf --replSet rs0 --shutdown

    echo_bold "-> Deleting data from previous runs...";
    rm -rf /home/routeflow/RouteFlow/rftest/mongo/data/*/*
    rm -rf /var/lib/lxc/rfvmZ/rootfs/opt/rfclient;
}
reset 1
trap "reset 0; exit 0" INT

if [ "$ACTION" != "RESET" ]; then
    echo_bold "-> Setting up the management bridge (lxcbr0)..."
    ifconfig lxcbr0 $MONGODB_ADDR up
    #ovs-vsctl --may-exist add-br lxcbr0
    #ovs-vsctl -- --may-exist add-port lxcbr0 rfvmZ.0
    ovs-vsctl --may-exist add-port lxcbr0 rfvmZ.0

    echo_bold "-> Setting up MongoDB instance 1..."
    mongod -f /home/routeflow/RouteFlow/rftest/mongo/conf/master.conf --replSet rs0

    echo_bold "-> Setting up MongoDB instance 2..."
    mongod -f /home/routeflow/RouteFlow/rftest/mongo/conf/slave1.conf --replSet rs0

    echo_bold "-> Setting up MongoDB instance 3..."
    mongod -f /home/routeflow/RouteFlow/rftest/mongo/conf/slave2.conf --replSet rs0

    echo_bold "-> Initializing Replica set..."
    #wait_port_listen 27017
    #wait_port_listen 27018
    #wait_port_listen 27019
    mongo --quiet 192.168.10.1:27017 /home/routeflow/RouteFlow/rftest/initReplicaSet.js;
    echo_bold "-> Waiting 10s for replica set intialization..."
    sleep 10

    echo_bold "-> Starting the rfvmZ virtual machine..."
    # Create the rfclient dir
    mkdir /var/lib/lxc/rfvmZ/rootfs/opt/rfclient

    # Copy the rfclient executable
    cp build/rfclient /var/lib/lxc/rfvmZ/rootfs/opt/rfclient/rfclient

    # We sleep for a few seconds to wait for the interfaces to go up
    echo "#!/bin/sh" > /var/lib/lxc/rfvmZ/rootfs/root/run_rfclient.sh
    echo "sleep 3" >> /var/lib/lxc/rfvmZ/rootfs/root/run_rfclient.sh
    echo "/opt/rfclient/rfclient -a $MONGODB_ADDR 2>&1 >/var/log/rfclient.log" >> /var/lib/lxc/rfvmZ/rootfs/root/run_rfclient.sh

    chmod +x /var/lib/lxc/rfvmZ/rootfs/root/run_rfclient.sh

    echo_bold "-> Starting the controller and RFPRoxy..."
    case "$ACTION" in
    POX)
        cd pox
        ./pox.py log.level --=INFO topology openflow.topology \
                 openflow.discovery rfproxy rfstats &
        cd -
        PROTOCOLS="OpenFlow10"
        ;;
    RYU)
        ryu-manager $RF_HOME/ryu-rfproxy/rfproxy.py &
        ;;
    esac
    wait_port_listen $CONTROLLER_PORT

    echo_bold "-> Starting RFServer..."
    ./rfserver/rfserver.py rftest/rftest5config.csv &

    echo_bold "-> Starting rfvmZ..."
    lxc-start -n rfvmZ -d

    echo_bold "-> Starting the control plane network (dp0 VS)..."
    ovs-vsctl add-br dp0
    ovs-vsctl add-port dp0 rfvmZ.1
    ovs-vsctl add-port dp0 rfvmZ.2
    ovs-vsctl set Bridge dp0 other-config:datapath-id=7266767372667673
    ovs-vsctl set Bridge dp0 protocols=$PROTOCOLS
    ovs-vsctl set-controller dp0 tcp:127.0.0.1:$CONTROLLER_PORT
    ifconfig dp0 up

    echo_bold "---"
    echo_bold "This test is up and running."
    echo_bold "Try pinging host 1 from host 2 in CPqD network:"
    echo_bold "$ ssh root@10.202.82.117 -p 22002"
    echo_bold "Login and run:"
    echo_bold "  $ ping -c 5 192.168.125.3"
    echo_bold "\nOR\n"
    echo_bold "Try pinging host 1 from host 2 in CPqD network:"
    echo_bold "$ ssh root@10.202.82.117 -p 22099"
    echo_bold "Login and run:"
    echo_bold "  $ ping -c 5 192.168.124.3"
    echo_bold "You can stop this test by pressing Ctrl+C in RF_VM."
    echo_bold "---"
    wait
fi

exit 0
